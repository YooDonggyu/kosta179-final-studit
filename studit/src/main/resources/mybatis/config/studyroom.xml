<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="studyroom">

	<!-- resultMap	Start -->
		<resultMap type="studyRoomConditionVO" id="srRM">
		<result property="useDate" column="usedate" />
		<result property="studyRoomVO.companyVO.companyNo" column="company_no" />
		<result property="studyRoomVO.companyVO.name" column="comName" />
		<result property="studyRoomVO.name" column="studyRoomName" />
		<result property="studyRoomVO.studyRoomNo" column="studyroom_no" />
		<result property="memberVO.memberEmail" column="memberEmail" />
		<result property="memberVO.name" column="memberName" />
		<result property="useDate" column="usedate" />
		<result property="startTime" column="start_time" />
		<result property="endTime" column="end_time" />
		<result property="state" column="state" />
		<result property="regDate" column="regdate" />
	</resultMap>
	
	<resultMap type="studyRoomVO" id="studyRoomRM">
		<result property="companyVO.companyNo" column="company_no"/>
		<result property="companyVO.name" column="c_name"/>
		<result property="companyVO.holiday" column="holiday"/>
	</resultMap>
	<!-- resultMap	End -->
	
	<!-- 
		스터디룸 신청 현황에 필요한 정보 가져오기
		@author 유동규
	 -->
   <select id="findStudyConditionByEmail" resultMap="srRM">
		select sc.*
				, m.name as memberName, sc.member_email as memberEmail
				, c.name as comName, c.company_no
				, s.name as studyRoomName, s.studyroom_no
		from (
				select studyroom_condition_no, start_time, end_time, state, member_email, studyroom_no
						, to_char(use_date, 'YYYY.MM.DD') as usedate, to_char(regdate, 'YYYY.MM.DD') as regdate
						, row_number() over(order by studyroom_condition_no desc) as rnum 
				from studyroom_condition
				where member_email= #{memberEmail}
				) sc, studyroom s, company c, member m
		where
		 	s.studyroom_no=sc.studyroom_no 
			and c.company_no = s.company_no
			and m.member_email = sc.member_email
			and  rnum between #{pagingBean.startRowNumber} and #{pagingBean.endRowNumber}
   </select>
  
  <!-- 
	이메일에 따른 studyroom_condition 수를 가져온다
	@author 유동규
   -->
   <select id="findTotalStudyRoomConditionByEmail" resultType="int">
   		select count(*) from studyroom_condition 
   		where member_email = #{value}
   </select>
	
	<!-- 
      	신청한 스터디룸 중 승인대기중인 스터디룸 조회
     	@author 송용준
     	@param memberEmail 회원 이메일
     	@return string 신청한 스터디룸 중 승인대기중인 스터디룸 개수
    -->
   <select id="findWaitStudyRoomByEmail" parameterType="string" resultType="string">
      select count(sc.studyroom_condition_no)
      from studyroom_condition sc
      where sc.member_email=#{value} and sc.state='대기중'
   </select>
   
   <select id="findStudyRoomInfoByStudyRoomNo" resultMap="studyRoomRM">
		select  c.company_no, c.name as c_name, c.holiday, s.studyroom_no, s.name, s.capacity, s.price
		from company c, studyroom s
		where c.company_no=s.company_no and s.studyroom_no=#{value}
	</select>
	
    <!-- 
   		업체 등록 시 입력된 스터디룸 데이터를 insert하는 쿼리
   
   		@author 변태섭
   		@param StudyRoomVO 스터디룸 정보가 담긴 객체
    -->
   <insert id="registerStudyRoom" parameterType="studyRoomVO">
   		<selectKey keyProperty="studyRoomNo" resultType="int" order="BEFORE">
					select
					studyroom_seq.nextval from dual
		</selectKey>
   		insert into studyroom(studyroom_no, name, capacity, price, content, company_no)
		values(#{studyRoomNo}, #{name}, #{capacity}, #{price}, #{content}, #{companyVO.companyNo})
   </insert>
   
   <!-- 
		스터디룸 등록 시 업로드 된 사진들의 경로를 테이블에 insert하는 쿼리
		
		@author 변태섭
		@param map 사진들의 경로와 스터디룸 번호를 담은 객체
    -->
   <insert id="registerStudyRoomPicPath" parameterType="map">
   		insert into studyroom_pic(studyroom_pic_no, path, studyroom_no)
   		values(studyroom_pic_seq.nextval, #{studyRoomPicPath}, #{studyRoomNo})
   </insert>
   
   <!-- 
   		스터디룸 등록 시 이용 기능들을 테이블에 insert하는 쿼리
   		
   		@author 변태섭
   		@param Map 스터디룸 번호와 기능명을 담은 객체
    -->
   <insert id="registerStudyRoomFunction" parameterType="map">
		insert into studyroom_function(function_no, name, studyroom_no)
		values(studyroom_function_seq.nextval, #{studyRoomFunction}, #{studyRoomNo})
   </insert>


	<!-- 
		스터디룸 신청
		@author 유동규
		@param StudyRoomConditionVO 등록할 정보가 담긴 객체
	 -->
	<insert id="registerStudyRoomCondition">
		insert into studyroom_condition(
			studyroom_condition_no, use_date, start_time
			, end_time, state, regdate, member_email, studyroom_no
			)
		values(
			studyroom_condition_seq.nextval, to_date(#{useDate}, 'YYYY-MM-DD')
			,#{startTime}, #{endTime}, '예약대기', sysdate, #{memberVO.memberEmail}, #{studyRoomVO.studyRoomNo}
		)
	</insert>


</mapper>
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
















